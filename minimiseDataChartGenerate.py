import matplotlib.pyplot as plt

arr =[ [12, 12, 16, 18, 19, 20, 25, 28, 32, 35, 39, 43, 44, 52, 61, 68, 70, 75, 83, 92, 94, 103, 111, 115, 127, 138, 145, 155, 162, 173],
    [4, 4, 5, 5, 6, 9, 12, 12, 12, 13, 13, 14, 16, 18, 22, 26, 30, 32, 39, 45, 49, 53, 59, 64, 74, 79, 91, 99, 107, 120],
    [7, 8, 8, 11, 13, 15, 17, 18, 23, 29, 33, 35, 42, 45, 49, 56, 64, 73, 78, 92, 101, 108, 120, 130, 150, 162, 175, 187, 206, 227],
    [9, 11, 12, 14, 17, 20, 22, 22, 23, 27, 28, 30, 33, 39, 45, 48, 56, 62, 71, 77, 85, 98, 102, 107, 118, 126, 135, 142, 149, 162],
    [9, 11, 13, 15, 16, 18, 19, 19, 20, 21, 21, 23, 25, 25, 29, 32, 36, 36, 40, 45, 51, 56, 62, 68, 72, 80, 86, 89, 100, 106],
    [6, 6, 7, 8, 8, 8, 11, 13, 16, 18, 21, 25, 29, 35, 37, 39, 46, 52, 57, 66, 71, 75, 82, 89, 93, 99, 105, 117, 127, 136],
    [5, 5, 6, 7, 8, 9, 10, 11, 12, 15, 15, 17, 18, 18, 20, 26, 28, 33, 35, 43, 47, 51, 55, 60, 66, 69, 77, 83, 92, 101],
    [5, 5, 6, 8, 8, 8, 9, 10, 11, 11, 13, 14, 17, 20, 25, 29, 30, 32, 37, 39, 43, 46, 48, 51, 54, 58, 60, 61, 65, 71],
    [4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 9, 11, 11, 11, 12, 12, 12, 13, 14, 16, 16, 16, 17, 17, 18, 20, 20, 20, 20],
    [8, 12, 13, 15, 19, 21, 25, 33, 41, 50, 57, 60, 71, 75, 81, 88, 95, 104, 115, 124, 137, 149, 162, 177, 190, 210, 230, 246, 262, 280],

    [6, 7, 8, 9, 11, 13, 14, 15, 17, 21, 21, 24, 26, 27, 29, 35, 35, 36, 37, 38, 40, 41, 41, 42, 44, 44, 44, 47, 48, 49],
    [6, 6, 7, 7, 8, 8, 8, 9, 11, 13, 14, 17, 19, 22, 23, 31, 36, 43, 45, 50, 57, 59, 64, 69, 79, 89, 97, 103, 112, 124],
    [5, 6, 7, 7, 10, 11, 14, 15, 17, 23, 26, 28, 31, 35, 42, 47, 54, 62, 65, 70, 77, 84, 87, 92, 94, 101, 107, 115, 125, 132],
    [4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 10, 11, 12, 13, 15, 15, 17, 17, 18, 19, 21, 24, 26, 29, 32],
    [6, 7, 8, 9, 9, 10, 14, 18, 18, 24, 27, 34, 40, 43, 49, 53, 59, 62, 68, 73, 75, 78, 87, 92, 100, 106, 114, 120, 128, 133],
    [5, 6, 6, 7, 8, 10, 12, 13, 15, 19, 24, 29, 31, 35, 39, 41, 41, 43, 50, 61, 69, 74, 76, 81, 92, 96, 100, 103, 113, 122],
    [9, 9, 15, 17, 20, 26, 31, 36, 40, 48, 55, 60, 68, 76, 82, 95, 111, 124, 140, 166, 181, 204, 225, 245, 272, 288, 306, 329, 350, 364],
    [3, 4, 4, 4, 4, 4, 5, 6, 7, 9, 9, 9, 11, 12, 12, 12, 13, 17, 20, 20, 20, 23, 24, 24, 24, 26, 28, 31, 33, 35],
    [10, 10, 11, 16, 18, 21, 27, 30, 34, 39, 43, 46, 50, 56, 64, 68, 75, 85, 99, 108, 115, 128, 136, 151, 163, 181, 201, 214, 231, 251],
    [11, 13, 14, 15, 16, 16, 17, 19, 22, 22, 30, 35, 40, 44, 47, 50, 54, 63, 64, 67, 70, 76, 88, 96, 99, 107, 121, 130, 139, 156],

    [8, 8, 10, 12, 13, 13, 14, 17, 19, 20, 23, 24, 25, 25, 30, 35, 36, 39, 41, 44, 44, 46, 49, 52, 53, 54, 56, 57, 59, 62] ,
    [4, 4, 5, 5, 7, 9, 12, 13, 15, 23, 25, 26, 28, 31, 36, 39, 46, 52, 58, 65, 77, 86, 91, 100, 107, 114, 121, 136, 148, 158],
    [11, 12, 15, 17, 19, 23, 26, 30, 39, 44, 53, 62, 75, 89, 100, 110, 129, 143, 155, 171, 190, 203, 230, 252, 271, 300, 322, 344, 370, 396],
    [4, 4, 4, 4, 4, 4, 7, 7, 7, 8, 8, 9, 10, 10, 12, 15, 19, 24, 25, 27, 31, 34, 37, 41, 45, 52, 55, 63, 75, 83],
    [5, 5, 6, 8, 8, 9, 10, 10, 12, 12, 14, 16, 20, 25, 31, 38, 46, 51, 62, 69, 78, 85, 91, 96, 102, 106, 116, 127, 141, 159],
    [6, 6, 9, 11, 17, 18, 23, 27, 33, 36, 39, 44, 47, 50, 60, 67, 75, 83, 90, 95, 103, 109, 113, 121, 128, 143, 157, 171, 188, 199],
    [7, 11, 14, 18, 19, 19, 22, 24, 29, 32, 36, 41, 43, 47, 51, 56, 60, 67, 71, 77, 82, 86, 96, 108, 120, 126, 137, 144, 155, 173],
    [6, 7, 8, 10, 12, 17, 18, 22, 25, 29, 32, 35, 42, 46, 49, 56, 60, 64, 71, 73, 78, 83, 91, 101, 114, 126, 134, 142, 148, 160],
    [11, 12, 15, 16, 17, 18, 21, 23, 25, 29, 30, 31, 37, 42, 48, 54, 60, 64, 74, 78, 85, 92, 100, 107, 120, 137, 149, 161, 178, 191],
    [9, 10, 11, 12, 12, 18, 19, 22, 26, 30, 30, 38, 49, 53, 56, 63, 70, 75, 81, 89, 95, 101, 113, 119, 131, 140, 151, 166, 178, 185],

    [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 8, 9],
    [9, 11, 13, 14, 18, 25, 29, 35, 38, 46, 49, 55, 58, 66, 81, 89, 97, 100, 107, 119, 139, 152, 166, 182, 200, 221, 248, 261, 275, 295],
    [11, 14, 18, 24, 26, 28, 29, 33, 36, 37, 40, 43, 47, 51, 58, 66, 73, 80, 89, 93, 101, 104, 115, 129, 142, 154, 172, 179, 191, 210],
    [7, 8, 8, 10, 11, 15, 18, 21, 25, 33, 41, 48, 53, 58, 66, 84, 100, 116, 131, 146, 157, 170, 186, 207, 227, 246, 258, 274, 292, 316],
    [6, 7, 9, 9, 11, 13, 15, 18, 20, 20, 21, 22, 23, 24, 26, 29, 31, 35, 38, 42, 47, 55, 58, 64, 66, 71, 78, 84, 91, 98],
    [5, 6, 6, 6, 6, 6, 8, 10, 10, 11, 12, 12, 13, 15, 21, 23, 24, 25, 26, 29, 33, 41, 49, 50, 51, 58, 59, 62, 68, 72],
    [5, 5, 5, 7, 7, 7, 8, 8, 9, 9, 9, 11, 13, 14, 17, 19, 22, 27, 31, 32, 34, 37, 41, 42, 48, 54, 60, 68, 70, 88],
    [10, 10, 13, 16, 17, 21, 23, 24, 26, 31, 36, 45, 58, 66, 74, 90, 104, 109, 118, 130, 148, 158, 173, 196, 218, 249, 277, 296, 314, 333],
    [6, 6, 6, 7, 10, 10, 12, 13, 15, 17, 22, 28, 34, 36, 37, 46, 52, 55, 65, 72, 86, 94, 102, 108, 116, 126, 133, 145, 156, 165],
    [10, 13, 14, 19, 23, 24, 27, 29, 33, 36, 39, 47, 53, 59, 67, 76, 81, 88, 96, 107, 116, 126, 141, 149, 162, 172, 186, 201, 218, 234],

    [9, 12, 16, 21, 28, 35, 40, 45, 50, 63, 72, 78, 80, 86, 96, 113, 117, 129, 139, 152, 165, 176, 193, 206, 223, 232, 250, 262, 283, 307],
    [9, 10, 11, 15, 18, 25, 26, 30, 34, 36, 39, 43, 48, 54, 62, 67, 81, 87, 95, 100, 110, 122, 129, 155, 162, 176, 183, 198, 217, 238],
    [13, 15, 19, 23, 24, 29, 30, 35, 39, 42, 49, 59, 67, 70, 81, 97, 110, 125, 140, 157, 171, 190, 206, 224, 247, 271, 291, 316, 354, 381],
    [7, 7, 8, 8, 10, 12, 15, 17, 19, 22, 25, 31, 32, 33, 39, 48, 54, 60, 67, 70, 82, 92, 102, 114, 128, 142, 146, 159, 176, 194],
    [5, 7, 8, 9, 10, 12, 13, 15, 18, 19, 23, 26, 31, 35, 42, 45, 47, 50, 55, 58, 65, 65, 71, 76, 79, 86, 93, 98, 101, 107],
    [9, 9, 11, 13, 18, 22, 26, 30, 35, 39, 45, 50, 56, 67, 79, 93, 102, 112, 128, 140, 151, 166, 178, 189, 206, 221, 243, 267, 285, 308],
    [7, 7, 8, 8, 8, 9, 9, 11, 12, 14, 14, 15, 18, 20, 23, 25, 30, 35, 35, 37, 39, 45, 48, 51, 59, 63, 72, 77, 80, 84],
    [3, 4, 5, 5, 7, 7, 7, 8, 9, 10, 13, 13, 15, 17, 19, 22, 24, 27, 32, 33, 38, 44, 46, 49, 59, 68, 71, 79, 89, 94],
    [4, 4, 4, 4, 5, 10, 10, 11, 13, 17, 18, 18, 21, 23, 26, 29, 32, 38, 43, 46, 51, 55, 57, 62, 66, 68, 71, 76, 81, 84],
    [11, 12, 12, 16, 19, 20, 24, 25, 26, 31, 33, 37, 38, 44, 50, 63, 76, 86, 94, 107, 119, 130, 147, 163, 176, 192, 208, 232, 254, 276],

    [9, 9, 9, 10, 12, 12, 14, 15, 16, 20, 21, 24, 26, 27, 33, 34, 42, 46, 49, 50, 58, 58, 61, 65, 68, 73, 83, 88, 95, 102],
    [10, 11, 16, 17, 19, 21, 23, 25, 32, 36, 41, 52, 59, 68, 74, 84, 89, 95, 102, 104, 111, 120, 133, 145, 155, 169, 179, 192, 212, 228],
    [5, 6, 7, 9, 9, 11, 11, 12, 14, 20, 25, 29, 30, 35, 36, 44, 48, 52, 60, 62, 69, 78, 89, 98, 111, 125, 128, 136, 151, 161],
    [4, 4, 5, 5, 6, 8, 9, 10, 12, 13, 14, 20, 22, 25, 28, 32, 34, 37, 40, 44, 50, 54, 58, 62, 67, 73, 74, 77, 86, 90],
    [9, 10, 11, 12, 14, 17, 23, 25, 26, 31, 35, 43, 57, 64, 71, 77, 89, 102, 109, 118, 132, 146, 156, 173, 195, 214, 230, 250, 272, 300],
    [9, 13, 15, 17, 19, 24, 28, 32, 41, 46, 56, 62, 71, 79, 83, 91, 102, 107, 121, 130, 144, 156, 169, 191, 209, 233, 251, 269, 282, 303],
    [7, 8, 8, 9, 11, 12, 13, 16, 20, 24, 30, 36, 38, 47, 58, 64, 69, 80, 90, 99, 105, 115, 129, 149, 161, 168, 177, 190, 210, 222],
    [5, 5, 5, 6, 7, 9, 9, 12, 13, 17, 23, 24, 26, 29, 38, 41, 45, 46, 50, 59, 65, 73, 84, 89, 96, 106, 115, 126, 140, 154],
    [13, 17, 19, 23, 32, 34, 37, 39, 42, 48, 50, 56, 67, 74, 89, 96, 112, 123, 138, 148, 166, 179, 196, 209, 228, 249, 268, 289, 323, 355],
    [11, 13, 15, 15, 15, 17, 18, 21, 24, 27, 33, 38, 46, 56, 63, 77, 86, 97, 110, 122, 134, 155, 170, 187, 214, 235, 254, 275, 293, 319]]

actual = [7.06882631,   8.18929295,   9.42510175,  11.16347279,  14.05526537,
    16.19733395,  19.70703093,  23.01075978,  26.81705087,  29.90657286,
    35.87140998,  35.8137389,   38.93621579,  43.46751471,  47.44681903,
    51.38492972,  54.77104582,  58.07477467,  61.54327802,  65.52258235,
    69.59251265,  81.069057,  86.14411178,  90.73308178,  95.24790324,
    99.38374335, 104.75539225, 113.01883373, 115.90238758, 119.87345318]

def multigraph(la, lb, distances):

    mxColor = max(distances)
    mnColor = min(distances)

    for i in range(len(lb)):


        redness = map(distances[i], mnColor, mxColor, 0.75, 1) if len(lb)>1 else 0.75

        plt.plot(range(len(lb[i])), lb[i], color=[redness, 0, 1-redness], linewidth=1.0)

    # plot two graphs to compare
    plt.plot(range(len(la)), la, 'xkcd:pale lime', linewidth=6.0)
    plt.show()

def map(x, in_min, in_max, out_min, out_max):
    return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min

def oneDDistance(p1,q1):
    return (p1-q1)**2

def compare(realData, generatedData, persons=False):
    assert(len(realData) == len(generatedData))
    iters = len(realData)
    if persons:
        diffs = [oneDDistance(generatedData[i] , realData[i]*persons) for i in range(iters)]
    else:
        diffs = [oneDDistance(generatedData[i],realData[i]) for i in range(iters)]
    return sum(diffs)**(1/2)

dists = []
for i in arr:
    dists.append(compare(actual, i))

multigraph(actual, arr, dists)